enum CandidateInterviewOrderField {
  created_at
  name
  interview_date
}

enum CandidateJobStatusEditable {
  applied
  interviewing
}

enum CandidateInterviewStatus {
  invited_to_interview
  interviewing
  done
  cancelled
}

type CandidateInterview {
  id: ID!
  title: String!
  description: String
  candidate_job_id: ID!
  interview_date: Time!
  start_from: Time!
  end_at: Time!
  interviewer: [User!]!
  candidate_job: CandidateJob!
  edit_able: Boolean!
  owner: User
  status: CandidateInterviewStatus!
  edited: Boolean!
  location: String!
  meeting_link: String
  created_at: Time!
  updated_at: Time!
}

input CandidateInterviewOrder {
  field: CandidateInterviewOrderField!
  direction: OrderDirection!
}

input NewCandidateInterviewInput {
  title: String!
  description: String!
  candidate_job_id: ID!
  interview_date: Time!
  start_from: Time!
  end_at: Time!
  interviewer: [ID!]!
  location: String!
  meeting_link: String!
}

input NewCandidateInterview4CalendarInput {
  title: String!
  description: String!
  candidate_id: [ID!]!
  job_id: ID!
  interview_date: Time!
  start_from: Time!
  end_at: Time!
  interviewer: [ID!]!
  location: String!
  meeting_link: String!
}

input UpdateCandidateInterviewInput {
  title: String!
  description: String!
  candidate_job_id: ID!
  interview_date: Time!
  start_from: Time!
  end_at: Time!
  interviewer: [ID!]
  location: String!
  meeting_link: String!
}

input UpdateCandidateInterviewScheduleInput {
  interview_date: Time!
  start_from: Time!
  end_at: Time!
  interviewer: [ID!]
}

input CandidateInterviewFilter {
  candidate_job_id: ID!
  interview_date: Time
  start_from: Time
  end_at: Time
  interviewer: [ID!]
  from_date: Time
  to_date: Time
}

input CandidateInterviewCalendarFilter {
  interview_date: Time
  start_from: Time
  end_at: Time
  interviewer: [ID!]
  from_date: Time
  to_date: Time
  hiring_team_id: ID
  hiring_job_id: ID
  interview_date_from: Time
  interview_date_to: Time
}

input CandidateInterviewValidateInput {
  id: ID
  title: String!
  candidate_job_id: ID
  candidate_id: ID
  job_id: ID
  interview_date: Time!
  start_from: Time!
  end_at: Time!
  interviewer: [ID!]!
}

type CandidateInterviewValidate {
  interviewer_invalid: [ID!]
  invalid_schedule: Boolean!
  candidate_name: String!
  candidate_job_invalid_status: Boolean!
}

type CandidateInterviewResponseValidate {
  data: CandidateInterviewValidate
}

input CandidateInterviewFreeWord {
  title: String
  description: String
}

type CandidateInterviewResponse {
  data: CandidateInterview
}

type CandidateInterviewEdge {
  node: CandidateInterview!
  cursor: Cursor!
}

type CandidateInterviewResponseGetAll {
  edges: [CandidateInterviewEdge!]!
  pagination: Pagination!
}

enum CandidateInterviewStatusEditable {
  done
  cancelled
}

input UpdateCandidateInterviewStatusInput {
  status: CandidateInterviewStatusEditable!
}
