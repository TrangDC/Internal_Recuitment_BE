enum CandidateJobStatusEnded {
  hired
  kiv
  offer_lost
  ex_staff
}

enum CandidateJobStatusOpen{
  applied
  interviewing
  offering
}

enum CandidateJobStatus {
  hired
  kiv
  offer_lost
  ex_staff
  applied
  interviewing
  offering
  new
}

input CandidateJobGroupByStatusFilter{
  hiring_job_id: ID!
}

type CandidateJob {
  id: ID!
  candidate_id: ID!
  hiring_job_id: ID!
  status: CandidateJobStatus!
  attachments: [Attachment!]
  candidate: Candidate!
  created_at: Time!
  updated_at: Time!
}

type CandidateJobGroupByStatus {
  hired: [CandidateJob!]
  kiv: [CandidateJob!]
  offer_lost: [CandidateJob!]
  ex_staff: [CandidateJob!]
  applied: [CandidateJob!]
  interviewing: [CandidateJob!]
  offering: [CandidateJob!]
}

input NewCandidateJobInput {
  candidate_id: ID!
  hiring_job_id: ID!
  status: CandidateJobStatus!
  attachments: [NewAttachmentInput!]
}

input UpdateCandidateAttachment {
  attachments: [NewAttachmentInput!]
}

type CandidateJobResponse {
  data: CandidateJob
}
type CandidateJobGroupByStatusResponse {
  data: CandidateJobGroupByStatus
}

type CandidateJobEdge {
  node: CandidateJob!
  cursor: Cursor!
}

type CandidateJobResponseGetAll {
  edges: [CandidateJobEdge!]!
  pagination: Pagination!
}

input CandidateJobFilter {
  status: CandidateJobStatus
  from_date: Time
  to_date: Time
  team_id: ID
  hiring_job_id: ID
  candidate_id: ID!
}

input CandidateJobOrder {
  direction: OrderDirection!
  field: CandidateJobOrderField!
}

enum CandidateJobOrderField {
  created_at
  updated_at
}

input CandidateJobFreeWord {
  team: String
  hiring_job: String
}
