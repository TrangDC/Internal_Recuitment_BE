enum SkillOrderField {
  name
  description
  created_at
}

input SkillOrder {
  direction: OrderDirection!
  field: SkillOrderField!
}

input SkillFilter {
  name: String
  skill_type_ids: [ID!]
}

input SkillFreeWord {
  name: String
}

input NewSkillInput {
  name: String!
  description: String!
  skill_type_id: ID
}

input UpdateSkillInput {
  name: String!
  description: String!
  skill_type_id: ID
}

type Skill {
  id: ID!
  name: String!
  description: String
  skill_type: SkillType
  is_able_to_delete: Boolean!
  created_at: Time!
  updated_at: Time!
  deleted_at: Time
}

type SkillResponse {
  data: Skill!
}

type SkillEdge {
  node: Skill!
  cursor: Cursor!
}

type SkillResponseGetAll {
  edges: [SkillEdge!]!
  pagination: Pagination!
}

type SkillSelection {
  id: ID!
  name: String!
  skill_type: SkillTypeSelection
}

type SkillSelectionEdge {
  node: SkillSelection!
  cursor: Cursor!
}

type SkillSelectionResponseGetAll {
  edges: [SkillSelectionEdge!]!
  pagination: Pagination!
}

# Path: schema/skill.graphql
