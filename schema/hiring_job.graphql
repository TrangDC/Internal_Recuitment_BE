enum LocationEnum {
  ha_noi
  ho_chi_minh
  da_nang
  japan
  singapore
}

enum SalaryTypeEnum {
  range
  up_to
  negotiate
  minimum
}

enum CurrencyEnum {
  vnd
  usd
  jpy
}

enum HiringJobStatus {
  pending_approvals
  opened
  closed
  cancelled
}

enum HiringJobLevel {
  intern
  fresher
  junior
  middle
  senior
  manager
  director
}

enum HiringJobOrderByField {
  name
  created_at
  amount
  salary_from
  salary_to
  last_apply_date
  total_candidates_recruited
  priority
}

enum HiringJobOrderByAdditionalField {
  total_candidates_recruited
}

input HiringJobOrderBy {
  direction: OrderDirection!
  field: HiringJobOrderByField!
}

input HiringJobFilter {
  name: String
  hiring_team_ids: [ID!]
  rec_team_ids: [ID!]
  rec_in_charge_ids: [ID!]
  status: HiringJobStatus
  priority: Int
  location: [LocationEnum]
  skill_ids: [ID!]
  created_by_ids: [ID!]
  for_owner: Boolean
  for_hiring_team: Boolean
  job_position_ids: [ID!]
  approver_id: ID
  approver_status: HiringJobStepStatusEnum
}

input HiringJobFreeWord {
  name: String
}

type HiringJobGroupByStatus {
  pending_approvals: [HiringJob!]
  opened: [HiringJob!]
  closed: [HiringJob!]
  cancelled: [HiringJob!]
}

type HiringJobGroupByStatusResponse {
  data: HiringJobGroupByStatus!
  pagination: Pagination!
}

input NewHiringJobInput {
  name: String!
  description: String!
  amount: Int!
  location: LocationEnum!
  salary_type: SalaryTypeEnum!
  salary_from: Int!
  salary_to: Int!
  currency: CurrencyEnum!
  hiring_team_id: ID!
  rec_team_id: ID!
  created_by: ID!
  priority: Int!
  entity_skill_records: [EntitySkillRecordInput!]
  job_position_id: ID!
  level: HiringJobLevel!
  note: String!
}

input UpdateHiringJobInput {
  name: String!
  description: String!
  amount: Int!
  location: LocationEnum!
  salary_type: SalaryTypeEnum!
  salary_from: Int!
  salary_to: Int!
  currency: CurrencyEnum!
  hiring_team_id: ID!
  rec_team_id: ID!
  rec_in_charge_id: ID!
  created_by: ID!
  priority: Int!
  entity_skill_records: [EntitySkillRecordInput!]
  job_position_id: ID!
  level: HiringJobLevel!
  note: String!
}

type HiringJob {
  id: ID!
  name: String!
  slug: String!
  description: String!
  amount: Int!
  location: LocationEnum!
  salary_type: SalaryTypeEnum!
  salary_from: Int!
  salary_to: Int!
  currency: CurrencyEnum!
  job_position: JobPosition
  job_position_id: ID
  hiring_team: HiringTeam!
  rec_team: RecTeam!
  rec_in_charge: User
  user: User!
  status: HiringJobStatus!
  total_candidates_recruited: Int!
  is_able_to_close: Boolean!
  priority: Int!
  entity_skill_types: [EntitySkillType!]
  created_at: Time!
  updated_at: Time!
  deleted_at: Time
  steps: [HiringJobStep!]
  level: HiringJobLevel!
  note: String!
  is_able_to_cancel: Boolean!
  opened_at: Time
  closed_at: Time
}

type HiringJobResponse {
  data: HiringJob
}

type HiringJobEdge {
  node: HiringJob!
  cursor: Cursor!
}

type HiringJobResponseGetAll {
  edges: [HiringJobEdge!]!
  pagination: Pagination!
}

type HiringJobSelection {
  id: ID!
  name: String!
}

type HiringJobSelectionEdge {
  node: HiringJobSelection!
  cursor: Cursor!
}

type HiringJobSelectionResponseGetAll {
  edges: [HiringJobSelectionEdge!]!
  pagination: Pagination!
}

# Path: schema/hiring_job.graphql
