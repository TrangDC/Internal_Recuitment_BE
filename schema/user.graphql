enum UserOrderField {
  name
  created_at
}

enum UserStatus {
  active
  inactive
}

input UserOrder {
  direction: OrderDirection!
  field: UserOrderField!
}

type UserSelection {
  id: ID!
  name: String!
  work_email: String!
}

type User {
  id: ID!
  name: String!
  work_email: String!
  status: UserStatus!
  hiring_team: HiringTeam
  entity_permissions: [EntityPermission!]!
  roles: [Role!]!
  member_of_hiring_team: HiringTeam
  member_of_rec_team: RecTeam
}

type UserSelectionEdge {
  node: UserSelection!
  cursor: Cursor!
}

type UserSelectionResponseGetAll {
  edges: [UserSelectionEdge!]!
  pagination: Pagination!
}

input UserFilter {
  name: String
  ids: [ID!]
  ignore_ids: [ID!]
  status: UserStatus
  is_able_to_interviewer: Boolean
  hiring_team_id: [ID!]
  role_id: [ID!]
}

input UserFreeWord {
  name: String
  work_email: String
}

input NewUserInput {
  name: String!
  work_email: String!
  status: UserStatus!
  hiring_team_id: ID
  role_id: [ID!]
}

input UpdateUserInput {
  name: String!
  work_email: String!
  status: UserStatus!
  hiring_team_id: ID
  role_id: [ID!]
}

type UserResponse {
  data: User
}

type UserEdge {
  node: User!
  cursor: Cursor!
}

type UserResponseGetAll {
  edges: [UserEdge!]!
  pagination: Pagination!
}

input UpdateUserStatusInput {
  status: UserStatus!
}
