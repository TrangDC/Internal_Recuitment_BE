// Code generated by ent, DO NOT EDIT.

package candidatejobfeedback

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the candidatejobfeedback type in the database.
	Label = "candidate_job_feedback"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCandidateJobID holds the string denoting the candidate_job_id field in the database.
	FieldCandidateJobID = "candidate_job_id"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldFeedback holds the string denoting the feedback field in the database.
	FieldFeedback = "feedback"
	// EdgeCreatedByEdge holds the string denoting the created_by_edge edge name in mutations.
	EdgeCreatedByEdge = "created_by_edge"
	// EdgeCandidateJobEdge holds the string denoting the candidate_job_edge edge name in mutations.
	EdgeCandidateJobEdge = "candidate_job_edge"
	// EdgeAttachmentEdges holds the string denoting the attachment_edges edge name in mutations.
	EdgeAttachmentEdges = "attachment_edges"
	// Table holds the table name of the candidatejobfeedback in the database.
	Table = "candidate_job_feedbacks"
	// CreatedByEdgeTable is the table that holds the created_by_edge relation/edge.
	CreatedByEdgeTable = "candidate_job_feedbacks"
	// CreatedByEdgeInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	CreatedByEdgeInverseTable = "users"
	// CreatedByEdgeColumn is the table column denoting the created_by_edge relation/edge.
	CreatedByEdgeColumn = "created_by"
	// CandidateJobEdgeTable is the table that holds the candidate_job_edge relation/edge.
	CandidateJobEdgeTable = "candidate_job_feedbacks"
	// CandidateJobEdgeInverseTable is the table name for the CandidateJob entity.
	// It exists in this package in order to avoid circular dependency with the "candidatejob" package.
	CandidateJobEdgeInverseTable = "candidate_jobs"
	// CandidateJobEdgeColumn is the table column denoting the candidate_job_edge relation/edge.
	CandidateJobEdgeColumn = "candidate_job_id"
	// AttachmentEdgesTable is the table that holds the attachment_edges relation/edge.
	AttachmentEdgesTable = "attachments"
	// AttachmentEdgesInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	AttachmentEdgesInverseTable = "attachments"
	// AttachmentEdgesColumn is the table column denoting the attachment_edges relation/edge.
	AttachmentEdgesColumn = "relation_id"
)

// Columns holds all SQL columns for candidatejobfeedback fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCandidateJobID,
	FieldCreatedBy,
	FieldFeedback,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
