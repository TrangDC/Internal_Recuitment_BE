// Code generated by ent, DO NOT EDIT.

package permission

import (
	"time"
)

const (
	// Label holds the string label denoting the permission type in the database.
	Label = "permission"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldGroupID holds the string denoting the group_id field in the database.
	FieldGroupID = "group_id"
	// FieldForOwner holds the string denoting the for_owner field in the database.
	FieldForOwner = "for_owner"
	// FieldForTeam holds the string denoting the for_team field in the database.
	FieldForTeam = "for_team"
	// FieldForAll holds the string denoting the for_all field in the database.
	FieldForAll = "for_all"
	// FieldOperationName holds the string denoting the operation_name field in the database.
	FieldOperationName = "operation_name"
	// FieldParentID holds the string denoting the parent_id field in the database.
	FieldParentID = "parent_id"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// EdgeGroupPermissionEdge holds the string denoting the group_permission_edge edge name in mutations.
	EdgeGroupPermissionEdge = "group_permission_edge"
	// EdgeUserPermissionEdge holds the string denoting the user_permission_edge edge name in mutations.
	EdgeUserPermissionEdge = "user_permission_edge"
	// Table holds the table name of the permission in the database.
	Table = "permissions"
	// GroupPermissionEdgeTable is the table that holds the group_permission_edge relation/edge.
	GroupPermissionEdgeTable = "permissions"
	// GroupPermissionEdgeInverseTable is the table name for the PermissionGroup entity.
	// It exists in this package in order to avoid circular dependency with the "permissiongroup" package.
	GroupPermissionEdgeInverseTable = "permission_groups"
	// GroupPermissionEdgeColumn is the table column denoting the group_permission_edge relation/edge.
	GroupPermissionEdgeColumn = "group_id"
	// UserPermissionEdgeTable is the table that holds the user_permission_edge relation/edge.
	UserPermissionEdgeTable = "entity_permissions"
	// UserPermissionEdgeInverseTable is the table name for the EntityPermission entity.
	// It exists in this package in order to avoid circular dependency with the "entitypermission" package.
	UserPermissionEdgeInverseTable = "entity_permissions"
	// UserPermissionEdgeColumn is the table column denoting the user_permission_edge relation/edge.
	UserPermissionEdgeColumn = "permission_id"
)

// Columns holds all SQL columns for permission fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldTitle,
	FieldGroupID,
	FieldForOwner,
	FieldForTeam,
	FieldForAll,
	FieldOperationName,
	FieldParentID,
	FieldOrderID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultForOwner holds the default value on creation for the "for_owner" field.
	DefaultForOwner bool
	// DefaultForTeam holds the default value on creation for the "for_team" field.
	DefaultForTeam bool
	// DefaultForAll holds the default value on creation for the "for_all" field.
	DefaultForAll bool
)
