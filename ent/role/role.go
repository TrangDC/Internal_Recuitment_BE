// Code generated by ent, DO NOT EDIT.

package role

import (
	"time"
)

const (
	// Label holds the string label denoting the role type in the database.
	Label = "role"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeRolePermissionEdges holds the string denoting the role_permission_edges edge name in mutations.
	EdgeRolePermissionEdges = "role_permission_edges"
	// EdgeUserEdges holds the string denoting the user_edges edge name in mutations.
	EdgeUserEdges = "user_edges"
	// EdgeEmailTemplateEdges holds the string denoting the email_template_edges edge name in mutations.
	EdgeEmailTemplateEdges = "email_template_edges"
	// EdgeUserRoles holds the string denoting the user_roles edge name in mutations.
	EdgeUserRoles = "user_roles"
	// EdgeEmailTemplateRoles holds the string denoting the email_template_roles edge name in mutations.
	EdgeEmailTemplateRoles = "email_template_roles"
	// Table holds the table name of the role in the database.
	Table = "roles"
	// RolePermissionEdgesTable is the table that holds the role_permission_edges relation/edge.
	RolePermissionEdgesTable = "entity_permissions"
	// RolePermissionEdgesInverseTable is the table name for the EntityPermission entity.
	// It exists in this package in order to avoid circular dependency with the "entitypermission" package.
	RolePermissionEdgesInverseTable = "entity_permissions"
	// RolePermissionEdgesColumn is the table column denoting the role_permission_edges relation/edge.
	RolePermissionEdgesColumn = "entity_id"
	// UserEdgesTable is the table that holds the user_edges relation/edge. The primary key declared below.
	UserEdgesTable = "user_roles"
	// UserEdgesInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserEdgesInverseTable = "users"
	// EmailTemplateEdgesTable is the table that holds the email_template_edges relation/edge. The primary key declared below.
	EmailTemplateEdgesTable = "email_role_attributes"
	// EmailTemplateEdgesInverseTable is the table name for the EmailTemplate entity.
	// It exists in this package in order to avoid circular dependency with the "emailtemplate" package.
	EmailTemplateEdgesInverseTable = "email_templates"
	// UserRolesTable is the table that holds the user_roles relation/edge.
	UserRolesTable = "user_roles"
	// UserRolesInverseTable is the table name for the UserRole entity.
	// It exists in this package in order to avoid circular dependency with the "userrole" package.
	UserRolesInverseTable = "user_roles"
	// UserRolesColumn is the table column denoting the user_roles relation/edge.
	UserRolesColumn = "role_id"
	// EmailTemplateRolesTable is the table that holds the email_template_roles relation/edge.
	EmailTemplateRolesTable = "email_role_attributes"
	// EmailTemplateRolesInverseTable is the table name for the EmailRoleAttribute entity.
	// It exists in this package in order to avoid circular dependency with the "emailroleattribute" package.
	EmailTemplateRolesInverseTable = "email_role_attributes"
	// EmailTemplateRolesColumn is the table column denoting the email_template_roles relation/edge.
	EmailTemplateRolesColumn = "role_id"
)

// Columns holds all SQL columns for role fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldDescription,
}

var (
	// UserEdgesPrimaryKey and UserEdgesColumn2 are the table columns denoting the
	// primary key for the user_edges relation (M2M).
	UserEdgesPrimaryKey = []string{"user_id", "role_id"}
	// EmailTemplateEdgesPrimaryKey and EmailTemplateEdgesColumn2 are the table columns denoting the
	// primary key for the email_template_edges relation (M2M).
	EmailTemplateEdgesPrimaryKey = []string{"role_id", "email_template_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	DescriptionValidator func(string) error
)
